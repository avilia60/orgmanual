#+TITLE:     Org Mode
#+AUTHOR:    Carsten Dominik and others
#+EMAIL:     tsd@tsdye.com
#+DATE:      2012-11-10 Sat
#+DESCRIPTION:
#+KEYWORDS:
#+LANGUAGE:  en
#+OPTIONS:   H:3 num:t toc:t \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+INFOJS_OPT: view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+LINK_UP:   
#+LINK_HOME: 
#+XSLT:


* Org Mode Manual
** Document structure
** Hyperlinks
** Markup for rich export
** Exporting
* About orgmanual.org                                              :noexport:
This document intends to be Org mode source for the Org mode manual
and the Org mode guide.  It is intended to be a major revision of the
manual, primarily to document the new exporter.  It is designed to be
exported using the new exporter and the texinfo back-end.


** Exporting

Export using =C-c e= if you are confident your initialization file(s)
won't pollute the process.

Alternatively, tangle =makefile= and =init.el= with =C-c C-v t= and
then from a shell run either =make= or =make info=.

* Nicolas Goaziou's instructions                                   :noexport:

** Global Changes
All occurrences of "#+LABEL:" should be replaced with "#+NAME:".

*** TODO Replace #+LABEL with #+NAME

** Chapter 2, Document Structure
   :PROPERTIES:
   :CATEGORY: Ch. 2
   :END:
In "2. Document Structure", one section could be added about
cross-referencing, which would point to "Internal links". There, targets
in comments can be removed. Also most back-ends will turn links to
targets into proper cross-reference number (see `org-export-get-ordinal'
docstring for cases handled).

*** TODO Add section about cross-referencing

** Chapter 4, Hyperlinks
   :PROPERTIES:
   :CATEGORY: Ch. 4
   :END:
"Internal links". There, targets
in comments can be removed. Also most back-ends will turn links to
targets into proper cross-reference number (see `org-export-get-ordinal'
docstring for cases handled).

*** TODO Remove targets in comments

** Chapter 11, Markup for Rich Export
   :PROPERTIES:
   :CATEGORY: Ch. 11
   :END:
*** Include Keyword
The "#+INCLUDE:" keyword syntax and effect is slightly different. You
may want to look at `org-export-expand-include-keyword'.

**** TODO Revise Include keyword
** Chapter 12, Exporting
   :PROPERTIES:
   :CATEGORY: Ch. 12
   :END:
*** Export Options
In "12. Exporting", "Export options" section need an overhaul. See
`org-export-options-alist' for the default list of export options. Other
options are back-end specific and should be introduced in their own
section. Also "#+KEYWORD:" renaming into ":EXPORT_KEYWORD:" property is
systematic.

**** TODO Overhaul Export options section

**** TODO KEYWORD now EXPORT_KEYWORD

*** Macros
There should also be a section about macros (and move it out of "11
Markup for rich export"), general, hard-coded ({{{time(...)}}},
{{{property(...)}}}, {{{input-file}}} and {{{modification-time(...)}}})
and specific ({{{date}}}, {{{author}}}, {{{title}}} and {{{email}}}). It
should be specified that macros are recursive and only apply to one
line. Therefore, they are appropriate for small replacements. For more
complex ones, one may use Babel instead.

**** TODO Write macros section

*** Filters
There should also be a section about filters used to customize export
output and another one about `org-export-define-derived-backend' which
allow someone to tweak a back-end.

**** TODO Write filters section
*** Export Snippets
A section can be added about export snippets, i.e.

  @@ob-latex:\something{...}@@

They are a generalization for @<html> tags.

**** TODO Write export snippets section
*** Captions
There may be a section about captions and their syntax. A note should
specify that export back-ends may or may not respect a caption. On the
other hand "11.2 Images and Tables" focuses on captions. Since these are
not specific to Images and Tables, it may be removed.

**** TODO Write captions section
*** Back-ends
I would also regroup every back-end into a sub-section to not clutter
main section.

Other options are back-end specific and should be introduced in their
own section.

Also most back-ends will turn links to
targets into proper cross-reference number (see `org-export-get-ordinal'
docstring for cases handled).


**** Old back-ends

"DocBook export" (though texinfo back-end can export to DocBook) and
"XOXO export" sections can be removed as the back-ends are discontinued.
There is no equivalent to "Taskjuggler export" yet, so it can be removed
too.

***** TODO Remove DocBook backend

***** TODO Remove XOXO backend

***** TODO Remove Taskjuggler backend

**** Back-end template
These are only suggestion. There is also probably many more things to
do. But I think that the hardest part is to start writing it. If you
come up with a good organization for e-latex back-end documentation, we
can use it for other back-ends thereafter.

***** TODO Write back-end template

****** TODO Does back-end turn links to targets?

**** LaTeX Back-end
About the latex back-end, you know certainly a lot. It should be
specified that it introduces 3 new keywords, namely "LATEX_CLASS",
"LATEX_CLASS_OPTIONS" and "LATEX_HEADER". It also introduces
"BEGIN_LATEX" and "BEGIN_TEX" blocks (the latter being just a synonym
for the former). It would be worth to add that it handles footnotes in
item tags and footnotes within footnotes. It also handles booktabs,
paralist types, automatic babel language selection with #+LANGUAGE: in
addition to already present features (minted/listings package handling).

***** TODO Write LaTeX back-end
**** Beamer Back-end
The BEAMER export back-end deserves, IMO, its own section.

***** TODO Write Beamer back-end
**** TexInfo Back-end
> BTW, it would be great to have a texinfo exporter so the Org
> documentation could be written in Org-mode :)

There is one, albeit barely tested: (require 'org-e-texinfo).

though texinfo back-end can export to DocBook

***** TODO Write texinfo backend
*** Export dispatcher
I think that the export dispatcher doesn't deserve its own section. The
introduction to Export subsystem can talk about "M-x
org-export-dispatch" (bound to C-c C-e) instead.
**** TODO Remove export dispatcher section

*** Smart quotes
There should be a section about smart-quotes too.

**** TODO Add smart quotes section
* Texi -> Org                                                      :noexport:
This section contains source code blocks that help translate from
=texinfo= to =Org=.

* Notes                                                            :noexport:
* Org-mode setup                                                   :noexport:

** init.el file
This source code block requires paths to your Org mode installation.
Modify accordingly.

#+name: emacs-init
#+header: :tangle init.el
#+header: :results silent
#+begin_src emacs-lisp
(setq load-path (cons "~/.emacs.d/src/org-mode/lisp" load-path))
(setq load-path (cons "~/.emacs.d/src/org-mode/contrib/lisp" load-path))
(require 'org-e-texinfo)
(define-key org-mode-map (kbd "C-c e") 'org-export-dispatch)
(setq org-src-preserve-indentation t)
(setq org-confirm-babel-evaluate nil)
(org-babel-do-load-languages
 'org-babel-load-languages
 '((emacs-lisp . t)
   (makefile . t)
   (sh . t)))
#+end_src

#+end_src

** Makefile
This source code block requires information to call your emacs binary.

Be certain =org-src-preserve-indentation= is non-nil before you edit
or export this source code block.

#+name: make-manual
#+header: :tangle Makefile
#+header: :results silent
#+begin_src makefile
  CC=gcc  
  EMACS=/Applications/MacPorts/Emacs.app/Contents/MacOS/Emacs
  BATCH_EMACS=$(EMACS) --batch -Q -l init.el orgmanual.org

  all: orgmanual.texi	

  info: orgmanual.info

  orgmanual.texi: orgmanual.org
	$(BATCH_EMACS) -f org-e-texinfo-export-to-texinfo

  orgmanual.info: orgmanual.org
	$(BATCH_EMACS) -f org-e-texinfo-export-to-info

  clean:
	rm -f *~ orgmanual.texi orgmanual.info

  real-clean: clean
	rm -f Makefile init.el
#+end_src


*** DONE Figure out how to export with a batch call
    :LOGBOOK:
    - State "DONE"       from "TODO"       [2012-11-10 Sat 12:46]
    :END:
The correct command is org-e-texinfo-export-to-texinfo

